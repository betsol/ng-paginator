/**
 * betsol-ng-paginator - Paginator for Angular.js
 * @version v0.0.2
 * @link https://github.com/betsol/ng-paginator
 * @license MIT
 *
 * @author Slava Fomin II <s.fomin@betsol.ru>
 */
!function(n,t){"use strict";function e(n){for(;n.length>0;)n.pop()}t.module("betsol.paginator",[]).factory("Paginator",function(){return function(n){function o(){e(l),h=!1,s("List is cleared")}function i(){f=0,p=null,h=!0}function r(){return v=!0,s("Loading batch of items",{criteria:d,itemsPerPage:c,offset:f}),n(d,c,f,g).then(function(n){if("undefined"==typeof n.data)return console.log("Missing data from loader's response."),void 0;if(null===p){if("undefined"==typeof n.meta)return console.log("Missing meta from loader's response."),void 0;if("undefined"==typeof n.meta.pagination)return console.log("Missing pagination from loader's response."),void 0;if("undefined"==typeof n.meta.pagination.totalCount)return console.log("Missing total from loader's response."),void 0;p=parseInt(n.meta.pagination.totalCount),s("Total is set",p)}h&&o(),t.forEach(n.data,function(n){l.push(n)}),v=!1,a||(a=!0,s("Storage is now initialized")),y&&y(n);var e=n.data.length;return s("Items loaded (count)",e),e})}function u(){return!1!==m?r().then(function(n){f+=n,m=p-(f+1)>=0,s("New offset calculated",f)}):void 0}function s(){I&&console.log.apply(console,arguments)}var a=!1,l=[],f=0,c=null,d={},g=null,p=null,m=null,h=!1,v=!1,y=null,I=!1;return{list:l,hasMoreItems:function(){return m},isLoading:function(){return v},setItemsPerPage:function(n){return c=n,this},setCriteria:function(n){return t.equals(d,n)||i(),d=n,this},setSorting:function(n){return t.equals(g,n)||i(),g=n,this},first:function(){return v?null:(m=null,i(),u())},next:function(){return v?null:u()},addLoadEventListener:function(n){return"function"!=typeof n?(console.log("Specified event listener must be a function."),void 0):(y=n,void 0)},getItemsCount:function(){return this.list.length},isEmptyResult:function(){return a&&!v&&0==this.list.length}}}})}(window,angular);